From c332ed4200cb5aed3cde97f44404c56a483165b3 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?S=C3=A9bastien=20Delafond?= <sdelafond@gmail.com>
Date: Thu, 18 May 2017 11:26:41 +0200
Subject: [PATCH 09/12] iptables socket

---
 net/netfilter/xt_socket.c | 12 +++++++++---
 1 file changed, 9 insertions(+), 3 deletions(-)

diff --git a/net/netfilter/xt_socket.c b/net/netfilter/xt_socket.c
index b10ade2..d844787 100644
--- a/net/netfilter/xt_socket.c
+++ b/net/netfilter/xt_socket.c
@@ -210,7 +210,7 @@ static struct sock *xt_socket_lookup_slow_v4(struct net *net,
 }
 
 static bool
-socket_match(const struct sk_buff *skb, struct xt_action_param *par,
+socket_match(struct sk_buff *skb, struct xt_action_param *par,
 	     const struct xt_socket_mtinfo1 *info)
 {
 	struct sk_buff *pskb = (struct sk_buff *)skb;
@@ -245,8 +245,14 @@ socket_match(const struct sk_buff *skb, struct xt_action_param *par,
 		if (wildcard || !transparent)
 			sk = NULL;
 	}
-
-	return sk != NULL;
+    /* Untangle hack - or the socket mark to the packet if found
+         * We do this because there is no conntrack, and it is necessary
+         * to restore the QoS/bandwidth control mark on packets
+         * returning to nonlocally bound sockets */
+    if (sk != NULL) {
+        skb->mark |= sk->sk_mark;
+    }
+    return sk != NULL;
 }
 
 static bool
-- 
2.8.1

