diff -ruN linux-4.4.6.orig/include/net/netns/ipv6.h linux-4.4.6-18/include/net/netns/ipv6.h
--- linux-4.4.6.orig/include/net/netns/ipv6.h	2016-03-17 23:32:05.549773433 -0700
+++ linux-4.4.6-18/include/net/netns/ipv6.h	2016-03-27 23:20:26.447654110 -0700
@@ -48,6 +48,7 @@
 	struct xt_table		*ip6table_filter;
 	struct xt_table		*ip6table_mangle;
 	struct xt_table		*ip6table_raw;
+	struct xt_table		*ip6table_tune;
 #ifdef CONFIG_SECURITY
 	struct xt_table		*ip6table_security;
 #endif
diff -ruN linux-4.4.6.orig/include/uapi/linux/netfilter_ipv6.h linux-4.4.6-18/include/uapi/linux/netfilter_ipv6.h
--- linux-4.4.6.orig/include/uapi/linux/netfilter_ipv6.h	2016-03-17 23:32:06.061778278 -0700
+++ linux-4.4.6-18/include/uapi/linux/netfilter_ipv6.h	2016-03-27 23:20:26.447654110 -0700
@@ -72,6 +72,7 @@
 	NF_IP6_PRI_NAT_SRC = 100,
 	NF_IP6_PRI_SELINUX_LAST = 225,
 	NF_IP6_PRI_CONNTRACK_HELPER = 300,
+        NF_IP6_PRI_TUNE = INT_MAX - 5,
 	NF_IP6_PRI_LAST = INT_MAX,
 };
 
diff -ruN linux-4.4.6.orig/net/ipv6/netfilter/ip6table_tune.c linux-4.4.6-18/net/ipv6/netfilter/ip6table_tune.c
--- linux-4.4.6.orig/net/ipv6/netfilter/ip6table_tune.c	1969-12-31 16:00:00.000000000 -0800
+++ linux-4.4.6-18/net/ipv6/netfilter/ip6table_tune.c	2016-03-27 23:20:53.527894557 -0700
@@ -0,0 +1,87 @@
+/* 
+ * 
+ * (C) 2015 David Han <dhan@untangle.com>
+ *
+ * Port IPv4 tune table to support IPv6
+ */
+
+#include <linux/module.h>
+#include <linux/netfilter.h>
+#include <linux/netfilter_ipv6.h>
+#include <linux/netfilter_ipv6/ip6_tables.h>
+#include <linux/ip.h>
+#include <net/ip.h>
+
+#define TUNE_VALID_HOOKS ((1 << NF_INET_POST_ROUTING) | (1 << NF_INET_LOCAL_OUT))
+
+static struct nf_hook_ops *tune_ops __read_mostly;
+
+static const struct xt_table packet_tuner = {
+	.name		= "tune",
+	.valid_hooks	= TUNE_VALID_HOOKS,
+	.me		= THIS_MODULE,
+	.af		= NFPROTO_IPV6,
+	.priority = NF_IP6_PRI_TUNE,
+};
+
+static unsigned int
+ip6table_tune_hook(void *priv, struct sk_buff *skb,
+		     const struct nf_hook_state *state)
+{
+	return ip6t_do_table(skb, state, state->net->ipv6.ip6table_tune);
+}
+
+static struct nf_hook_ops *tune_ops __read_mostly;
+
+
+static int __net_init ip6table_tune_net_init(struct net *net)
+{
+	struct ip6t_replace *repl;
+
+	repl = ip6t_alloc_initial_table(&packet_tuner);
+	if (repl == NULL)
+		return -ENOMEM;
+
+	net->ipv6.ip6table_tune = ip6t_register_table(net, &packet_tuner, repl);
+	kfree(repl);
+	return PTR_ERR_OR_ZERO(net->ipv6.ip6table_tune);
+}
+
+static void __net_exit ip6table_tune_net_exit(struct net *net)
+{
+	ip6t_unregister_table(net, net->ipv6.ip6table_tune);
+}
+
+static struct pernet_operations ip6table_tune_net_ops = {
+	.init	= ip6table_tune_net_init,
+	.exit	= ip6table_tune_net_exit,
+};
+
+static int __init ip6table_tune_init(void)
+{
+	int ret;
+
+	ret = register_pernet_subsys(&ip6table_tune_net_ops);
+	if (ret < 0)
+		return ret;
+
+	/* Register hooks */
+	tune_ops = xt_hook_link(&packet_tuner, ip6table_tune_hook);
+	if (IS_ERR(tune_ops)) {
+		ret = PTR_ERR(tune_ops);
+		unregister_pernet_subsys(&ip6table_tune_net_ops);
+	}
+
+	return ret;
+}
+
+static void __exit ip6table_tune_exit(void)
+{
+	xt_hook_unlink(&packet_tuner, tune_ops);
+	unregister_pernet_subsys(&ip6table_tune_net_ops);
+}
+
+module_init(ip6table_tune_init);
+module_exit(ip6table_tune_exit);
+
+MODULE_LICENSE("GPL");
diff -ruN linux-4.4.6.orig/net/ipv6/netfilter/Kconfig linux-4.4.6-18/net/ipv6/netfilter/Kconfig
--- linux-4.4.6.orig/net/ipv6/netfilter/Kconfig	2016-03-17 23:31:50.773633590 -0700
+++ linux-4.4.6-18/net/ipv6/netfilter/Kconfig	2016-03-27 23:20:26.447654110 -0700
@@ -283,6 +283,19 @@
 	  If you want to compile it as a module, say M here and read
 	  <file:Documentation/kbuild/modules.txt>.  If unsure, say `N'.
 
+config IP6_NF_TUNE
+       tristate  'tune table support (adds a chain after POSTROUTING nat)'
+       depends on IP6_NF_IPTABLES
+       help
+         This option adds a `tune' table to iptables. This table is the very
+         last in the netfilter framework and hooks in at the POSTROUTING
+         chain.
+       
+         If you want to compile it as a module, say M here and read
+         <file:Documentation/modules.txt>.  If unsure, say `N'.
+
+
+
 # security table for MAC policy
 config IP6_NF_SECURITY
        tristate "Security table"
diff -ruN linux-4.4.6.orig/net/ipv6/netfilter/Makefile linux-4.4.6-18/net/ipv6/netfilter/Makefile
--- linux-4.4.6.orig/net/ipv6/netfilter/Makefile	2016-03-17 23:31:50.773633590 -0700
+++ linux-4.4.6-18/net/ipv6/netfilter/Makefile	2016-03-27 23:20:26.447654110 -0700
@@ -7,6 +7,7 @@
 obj-$(CONFIG_IP6_NF_FILTER) += ip6table_filter.o
 obj-$(CONFIG_IP6_NF_MANGLE) += ip6table_mangle.o
 obj-$(CONFIG_IP6_NF_RAW) += ip6table_raw.o
+obj-$(CONFIG_IP6_NF_TUNE) += ip6table_tune.o
 obj-$(CONFIG_IP6_NF_SECURITY) += ip6table_security.o
 obj-$(CONFIG_IP6_NF_NAT) += ip6table_nat.o
 
