Index: linux-source-2.6.24/include/linux/netfilter_ipv4/ipt_bitmark.h
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ linux-source-2.6.24/include/linux/netfilter_ipv4/ipt_bitmark.h	2007-12-27 05:14:29.000000000 +0000
@@ -0,0 +1,18 @@
+/* IP tables module for matching the value of the TTL
+ * (C) 2004 by Jim Mar <jmar@metavize.com> */
+
+#ifndef _IPT_BITMARK_H
+#define _IPT_BITMARK_H
+
+struct xt_bitmark_info {
+	int		invertxct;
+	int		invertone;
+	int		invertzed;
+	unsigned long	exactval;
+	unsigned long	exactmsk;
+	unsigned long	anyone;
+	unsigned long	anyzed;
+	unsigned long	flags;
+};
+
+#endif
Index: linux-source-2.6.24/net/ipv4/netfilter/Makefile
===================================================================
--- linux-source-2.6.24.orig/net/ipv4/netfilter/Makefile	2007-12-18 14:09:50.000000000 +0000
+++ linux-source-2.6.24/net/ipv4/netfilter/Makefile	2007-12-27 05:14:51.000000000 +0000
@@ -49,6 +49,7 @@
 obj-$(CONFIG_IP_NF_MATCH_RECENT) += ipt_recent.o
 obj-$(CONFIG_IP_NF_MATCH_TOS) += ipt_tos.o
 obj-$(CONFIG_IP_NF_MATCH_TTL) += ipt_ttl.o
+obj-$(CONFIG_IP_NF_MATCH_BITMARK) += ipt_bitmark.o
 
 # targets
 obj-$(CONFIG_IP_NF_TARGET_CLUSTERIP) += ipt_CLUSTERIP.o
Index: linux-source-2.6.24/net/ipv4/netfilter/ipt_bitmark.c
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ linux-source-2.6.24/net/ipv4/netfilter/ipt_bitmark.c	2007-12-27 05:14:29.000000000 +0000
@@ -0,0 +1,106 @@
+/* IP tables module for bit matching the value of the nfmark 
+ *
+ * (C) 2004 by Jim Mar <jmar@metavize.com>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+ */
+
+#include <linux/module.h>
+#include <linux/skbuff.h>
+
+#include <linux/netfilter_ipv4/ipt_bitmark.h>
+#include <linux/netfilter_ipv4/ip_tables.h>
+
+MODULE_AUTHOR("Jim Mar <jmar@metavize.com>");
+MODULE_DESCRIPTION("IP tables nfmark bit matching module");
+MODULE_LICENSE("GPL");
+
+static bool match(const struct sk_buff *skb, 
+		const struct net_device *in,
+		const struct net_device *out,
+		const struct xt_match *match,
+		const void *matchinfo,
+		int offset, 
+		unsigned int protoff,
+		bool *hotdrop)
+{
+	const struct xt_bitmark_info *info = matchinfo;
+	unsigned long x;
+
+	if (info->flags & 0x00000001) {
+		x = skb->mark & info->exactmsk;
+		if (info->invertxct == 0) {
+			if (x != info->exactval) {
+				return 0;
+			}
+		} else if (info->invertxct == 1) {
+			if (x == info->exactval) {
+				return 0;
+			}
+		}
+	}
+
+	if (info->flags & 0x00000002) {
+		x = skb->mark & info->anyone;
+		if (info->invertone == 0) {
+			if (x == 0) {
+				return 0;
+			}
+		} else if (info->invertone == 1) {
+			if (x != 0) {
+				return 0;
+			}
+		}
+	}
+
+	if (info->flags & 0x00000004) {
+		x = skb->mark & info->anyzed;
+		if (info->invertzed == 0) {
+			if (x == info->anyzed) {
+				return 0;
+			}
+		} else if (info->invertzed == 1) {
+			if (x != info->anyzed) {
+				return 0;
+			}
+		}
+	}
+
+	return 1;
+}
+
+static bool checkentry(const char *tablename, 
+			const void *entry,
+			const struct xt_match *match,
+			void* matchinfo,
+			unsigned int hoko_mask)
+{
+	return 1;
+}
+
+static struct xt_match xt_bitmark_match[] = {
+   {
+	.name		= "bitmark",
+	.family		= AF_INET,
+	.match		= match,
+	.checkentry	= checkentry,
+	.matchsize	= sizeof(struct xt_bitmark_info),
+	.me		= THIS_MODULE
+    }
+};
+
+static int __init init(void)
+{
+	return xt_register_matches(xt_bitmark_match, ARRAY_SIZE(xt_bitmark_match));
+}
+
+static void __exit fini(void)
+{
+	xt_unregister_matches(xt_bitmark_match, ARRAY_SIZE(xt_bitmark_match));
+
+}
+
+module_init(init);
+module_exit(fini);
Index: linux-source-2.6.24/net/ipv4/netfilter/Kconfig
===================================================================
--- linux-source-2.6.24.orig/net/ipv4/netfilter/Kconfig	2007-12-18 14:09:50.000000000 +0000
+++ linux-source-2.6.24/net/ipv4/netfilter/Kconfig	2007-12-27 05:14:29.000000000 +0000
@@ -130,6 +130,16 @@
 	  If you want to compile it as a module, say M here and read
 	  <file:Documentation/kbuild/modules.txt>.  If unsure, say `N'.
 
+config IP_NF_MATCH_BITMARK
+       tristate "netfilter BITMARK match support"
+       depends on IP_NF_IPTABLES
+       help
+         Netfilter mark matching allows you to match packets based on the
+         `nfmark' value in the packet.  This can be set by the MARK target
+         (see below).
+
+         To compile it as a module, choose M here.  If unsure, say N.
+
 # `filter', generic and specific targets
 config IP_NF_FILTER
 	tristate "Packet filtering"
