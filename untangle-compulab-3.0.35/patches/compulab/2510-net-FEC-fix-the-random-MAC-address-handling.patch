From 0ce4f47e5fc3b496b148a206290046c5707a495d Mon Sep 17 00:00:00 2001
From: Igor Grinberg <grinberg@compulab.co.il>
Date: Mon, 10 Dec 2012 16:54:01 +0200
Subject: net: FEC: fix the random MAC address handling

Current implementation of MAC address randomization is done in the early
platform code and always emits the same MAC address. Apparently, this is
happening because the enthropy pool is still empty.
Fix the random MAC address handling by moving the call to the
random_ether_addr() call to the driver instead of the platform code.

Signed-off-by: Igor Grinberg <grinberg@compulab.co.il>
---
 arch/arm/mach-mx6/mx6_fec.c |    2 --
 drivers/net/fec.c           |    3 +++
 2 files changed, 3 insertions(+), 2 deletions(-)

diff --git a/arch/arm/mach-mx6/mx6_fec.c b/arch/arm/mach-mx6/mx6_fec.c
index 935ba26..51be395 100644
--- a/arch/arm/mach-mx6/mx6_fec.c
+++ b/arch/arm/mach-mx6/mx6_fec.c
@@ -46,8 +46,6 @@ static int fec_get_mac_addr(unsigned char *mac)
 void __init imx6_init_fec(struct fec_platform_data fec_data)
 {
 	fec_get_mac_addr(fec_data.mac);
-	if (!is_valid_ether_addr(fec_data.mac))
-		random_ether_addr(fec_data.mac);
 
 	if (cpu_is_mx6sl())
 		imx6sl_add_fec(&fec_data);
diff --git a/drivers/net/fec.c b/drivers/net/fec.c
index fc65bdc..b0ac9ff 100755
--- a/drivers/net/fec.c
+++ b/drivers/net/fec.c
@@ -922,6 +922,9 @@ static void __inline__ fec_get_mac(struct net_device *ndev)
 		iap = &tmpaddr[0];
 	}
 
+	if (!is_valid_ether_addr(iap))
+		random_ether_addr(iap);
+
 	memcpy(ndev->dev_addr, iap, ETH_ALEN);
 
 	/* Adjust MAC if using macaddr */
-- 
1.7.9.5

