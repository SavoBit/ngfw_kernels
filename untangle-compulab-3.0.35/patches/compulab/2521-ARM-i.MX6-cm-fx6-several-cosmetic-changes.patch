From d090df642f02af6dc8cc0bc6bfd69126b2e03055 Mon Sep 17 00:00:00 2001
From: Igor Grinberg <grinberg@compulab.co.il>
Date: Sun, 24 Feb 2013 18:22:56 +0200
Subject: ARM: i.MX6: cm-fx6: several cosmetic changes

Make several cosmetic changes, so the board code will look more like the
cm-fx6 board code:
1) add author and copyright
2) rename multiple functions and structures to cm_fx6_*()
3) multiple white space changes (fix ups)
4) remove __init* annotation from platform_data structures
5) remove unused includes, comments, definitions and declarations

Signed-off-by: Igor Grinberg <grinberg@compulab.co.il>
---
 arch/arm/mach-mx6/board-cm-fx6.c |   83 +++++++++++++++++---------------------
 1 file changed, 37 insertions(+), 46 deletions(-)

diff --git a/arch/arm/mach-mx6/board-cm-fx6.c b/arch/arm/mach-mx6/board-cm-fx6.c
index f4f2550..bc4ac7f 100644
--- a/arch/arm/mach-mx6/board-cm-fx6.c
+++ b/arch/arm/mach-mx6/board-cm-fx6.c
@@ -1,5 +1,10 @@
 /*
- * Copyright (C) 2011-2012 Freescale Semiconductor, Inc. All Rights Reserved.
+ * CompuLab CM-FX6 module support
+ *
+ * Copyright (C) 2013 CompuLab, Ltd.
+ * Author: Igor Grinberg <grinberg@compulab.co.il>
+ *
+ * Derived from board-mx6q_arm2.c
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
@@ -13,7 +18,6 @@
 
  * You should have received a copy of the GNU General Public License along
  * with this program; if not, write to the Free Software Foundation, Inc.,
- * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
  */
 
 #include <linux/delay.h>
@@ -42,7 +46,6 @@
 #include <linux/fec.h>
 #include <linux/memblock.h>
 #include <linux/gpio.h>
-#include <linux/etherdevice.h>
 #include <linux/regulator/anatop-regulator.h>
 #include <linux/regulator/consumer.h>
 #include <linux/regulator/machine.h>
@@ -81,29 +84,20 @@
 #define MX6_ARM2_ECSPI1_CS0		IMX_GPIO_NR(2, 30)
 #define MX6_ARM2_ECSPI1_CS1		IMX_GPIO_NR(3, 19)
 #define MX6_ARM2_USB_OTG_PWR		IMX_GPIO_NR(3, 22)
-#define MX6_ARM2_CAP_TCH_INT		IMX_GPIO_NR(3, 31)
 #define MX6_ARM2_CAN2_EN		IMX_GPIO_NR(5, 24)
 #define MX6_ARM2_SD3_CD			IMX_GPIO_NR(6, 11)
 #define MX6_ARM2_SD3_WP			IMX_GPIO_NR(6, 14)
 #define MX6_ARM2_CAN1_STBY		IMX_GPIO_NR(7, 12)
 #define MX6_ARM2_CAN1_EN		IMX_GPIO_NR(7, 13)
 
-//#define MX6_ARM2_CAN2_STBY		MX6_ARM2_IO_EXP_GPIO2(1)
-
-
 #define BMCR_PDOWN			0x0800 /* PHY Powerdown */
 
-void __init early_console_setup(unsigned long base, struct clk *clk);
 static struct clk *sata_clk;
 static int spdif_en;
 static int flexcan_en;
 
-extern struct regulator *(*get_cpu_regulator)(void);
-extern void (*put_cpu_regulator)(void);
-extern char *gp_reg_id;
 extern char *soc_reg_id;
 extern char *pu_reg_id;
-extern void mx6_cpu_regulator_init(void);
 
 enum sd_pad_mode {
 	SD_PAD_MODE_LOW_SPEED,
@@ -216,8 +210,7 @@ static int __init board_support_onfi_nand(char *p)
 }
 early_param("onfi_support", board_support_onfi_nand);
 
-static const struct anatop_thermal_platform_data
-	mx6_arm2_anatop_thermal_data __initconst = {
+static const struct anatop_thermal_platform_data cm_fx6_anatop_thermal_data = {
 	.name = "anatop_thermal",
 };
 
@@ -233,7 +226,7 @@ static inline void mx6_arm2_init_uart(void)
 	imx6q_add_imx_uart(1, &mx6_arm2_uart1_data);
 }
 
-static int mx6_arm2_fec_phy_init(struct phy_device *phydev)
+static int cm_fx6_fec_phy_init(struct phy_device *phydev)
 {
 	unsigned short val;
 
@@ -253,14 +246,15 @@ static int mx6_arm2_fec_phy_init(struct phy_device *phydev)
 	val |= 0x0100;
 	phy_write(phydev, 0x1e, val);
 
-	/*check phy power*/
+	/* check phy power */
 	val = phy_read(phydev, 0x0);
 	if (val & BMCR_PDOWN)
 		phy_write(phydev, 0x0, (val & ~BMCR_PDOWN));
+
 	return 0;
 }
 
-static int mx6_arm2_fec_power_hibernate(struct phy_device *phydev)
+static int cm_fx6_fec_power_hibernate(struct phy_device *phydev)
 {
 	unsigned short val;
 
@@ -274,20 +268,20 @@ static int mx6_arm2_fec_power_hibernate(struct phy_device *phydev)
 	return 0;
 }
 
-static struct fec_platform_data fec_data __initdata = {
-	.init			= mx6_arm2_fec_phy_init,
-	.power_hibernate	= mx6_arm2_fec_power_hibernate,
+static struct fec_platform_data cm_fx6_fec_data = {
+	.init			= cm_fx6_fec_phy_init,
+	.power_hibernate	= cm_fx6_fec_power_hibernate,
 	.phy			= PHY_INTERFACE_MODE_RGMII,
 };
 
-static int mx6_arm2_spi_cs[] = {
+static int cm_fx6_spi_cs[] = {
 	MX6_ARM2_ECSPI1_CS0,
 	MX6_ARM2_ECSPI1_CS1,
 };
 
-static const struct spi_imx_master mx6_arm2_spi_data __initconst = {
-	.chipselect     = mx6_arm2_spi_cs,
-	.num_chipselect = ARRAY_SIZE(mx6_arm2_spi_cs),
+static const struct spi_imx_master cm_fx6_spi_data = {
+	.chipselect     = cm_fx6_spi_cs,
+	.num_chipselect = ARRAY_SIZE(cm_fx6_spi_cs),
 };
 
 #if defined(CONFIG_MTD_M25P80) || defined(CONFIG_MTD_M25P80_MODULE)
@@ -321,17 +315,17 @@ static struct flash_platform_data cm_fx6_spi_flash_data = {
 static struct spi_board_info cm_fx6_spi0_board_info[] = {
 #if defined(CONFIG_MTD_M25P80) || defined(CONFIG_MTD_M25P80_MODULE)
 	{
-	/* The modalias must be the same as spi device driver name */
-	.modalias	= "m25p80",
-	.max_speed_hz	= 20000000,
-	.bus_num	= 0,
-	.chip_select	= 0,
-	.platform_data	= &cm_fx6_spi_flash_data,
+		/* The modalias must be the same as spi device driver name */
+		.modalias	= "m25p80",
+		.max_speed_hz	= 20000000,
+		.bus_num	= 0,
+		.chip_select	= 0,
+		.platform_data	= &cm_fx6_spi_flash_data,
 	},
 #endif
 };
 
-static void spi_device_init(void)
+static void cm_fx6_spi_devices_init(void)
 {
 	spi_register_board_info(cm_fx6_spi0_board_info,
 				ARRAY_SIZE(cm_fx6_spi0_board_info));
@@ -352,9 +346,6 @@ static struct imxi2c_platform_data mx6_arm2_i2c2_data = {
 static struct i2c_board_info mxc_i2c1_board_info[] __initdata = {
 	{
 		I2C_BOARD_INFO("mxc_hdmi_i2c", 0x50),
-//	}, {
-//		I2C_BOARD_INFO("egalax_ts", 0x4),
-//		.irq = gpio_to_irq(MX6_ARM2_CAP_TCH_INT),
 	},
 };
 
@@ -541,10 +532,10 @@ static void hdmi_init(int ipu_id, int disp_id)
 		mxc_iomux_set_gpr_register(0, 0, 1, 1);
 }
 
-/* On mx6x arm2 board i2c2 iomux with hdmi ddc,
- * the pins default work at i2c2 function,
- when hdcp enable, the pins should work at ddc function */
-
+/*
+ * cm-fx6 shares i2c2 with hdmi ddc, the default is i2c2 function,
+ * when hdcp is enabled, the pins should work at ddc function.
+ */
 static void hdmi_enable_ddc_pin(void)
 {
 	if (cpu_is_mx6dl())
@@ -593,11 +584,11 @@ static struct fsl_mxc_ldb_platform_data ldb_data = {
 
 static struct imx_ipuv3_platform_data ipu_data[] = {
 	{
-	.rev		= 4,
-	.csi_clk[0]	= "clko_clk",
+		.rev		= 4,
+		.csi_clk[0]	= "clko_clk",
 	}, {
-	.rev		= 4,
-	.csi_clk[0]	= "clko_clk",
+		.rev		= 4,
+		.csi_clk[0]	= "clko_clk",
 	},
 };
 
@@ -916,14 +907,14 @@ static void __init cm_fx6_init(void)
 	cm_fx6_init_led();
 
 	/* SPI */
-	imx6q_add_ecspi(0, &mx6_arm2_spi_data);
-	spi_device_init();
+	imx6q_add_ecspi(0, &cm_fx6_spi_data);
+	cm_fx6_spi_devices_init();
 
 	imx6q_add_mxc_hdmi(&hdmi_data);
 
-	imx6q_add_anatop_thermal_imx(1, &mx6_arm2_anatop_thermal_data);
+	imx6q_add_anatop_thermal_imx(1, &cm_fx6_anatop_thermal_data);
 
-	imx6_init_fec(fec_data);
+	imx6_init_fec(cm_fx6_fec_data);
 
 	imx6q_add_pm_imx(0, &mx6_arm2_pm_data);
 	imx6q_add_sdhci_usdhc_imx(2, &mx6_arm2_sd3_data);
-- 
1.7.9.5

